package challenges.codility.prefixsums;

import java.util.Arrays;
import java.util.Collections;

public class GenomicRangeQuery {

    public static int[] solution(String S, int[] P, int[] Q) {
        String dna = S.replace("A", "1")
                .replace("C", "2")
                .replace("G", "3")
                .replace("T", "4");
        int[] response = new int[P.length];
        String[] arr = dna.split("");
        int len = Math.min(P.length, Q.length);
        for (int i = 0; i < len; i++) {
            System.out.println("full array" + Arrays.toString(arr));
            System.out.println("cut array" + Arrays.toString(Arrays.copyOfRange(arr, P[i], Q[i] + 1)));
            String min = Collections.min(Arrays.asList(Arrays.copyOfRange(arr, P[i], Q[i] + 1)));
            System.out.println("min:" + min);
            response[i] = Integer.parseInt(min);
        }
        return response;
    }

    public static int[] solution2(String S, int[] P, int[] Q) {

        int[] response = new int[P.length];
        int len = Math.min(P.length, Q.length);
        for (int i = 0; i < len; i++) {
            int value = 0;
            char[] charArray = S.substring(P[i], Q[i] + 1).toCharArray();
            Arrays.sort(charArray);
            String letter = String.valueOf(charArray[0]);


            if (letter.equals("A")) {
                value = 1;
            } else if (letter.equals("C")) {
                value = 2;
            } else if (letter.equals("G")) {
                value = 3;
            } else if (letter.equals("T")) {
                value = 4;
            }

            response[i] = value;
        }
        return response;
    }

    public static int[] solution3(String S, int[] P, int[] Q) {

        int[] aCount = new int[P.length];
        int[] cCount = new int[P.length];
        int[] gCount = new int[P.length];
        int[] tCount = new int[P.length];

        for (int i = 0; i < S.length(); i++) {
            aCount[i] = (S.charAt(i) == 'A') ? aCount[i]++ : aCount[i];
            cCount[i] = (S.charAt(i) == 'C') ? cCount[i]++ : cCount[i];
            gCount[i] = (S.charAt(i) == 'G') ? gCount[i]++ : gCount[i];
            tCount[i] = (S.charAt(i) == 'T') ? tCount[i]++ : tCount[i];


        }
        return P;
    }

    public static void main(String[] args) {

        long startTime = System.nanoTime();
        int[] response = solution
                new int[]{2, 5, 0}, new int[]{500, 1000, 6});
        long elapsedTime = System.nanoTime() - startTime;
        System.out.println("Total execution time to create 1000K objects in Java in millis: "
                + elapsedTime / 1000000);
        System.out.println("response: " + Arrays.toString(response));
        response = solution
                new int[]{2, 5, 0}, new int[]{4, 5, 6});
        System.out.println("response: " + Arrays.toString(response));
        // response = solution("CAGCCTA", new int[]{2, 5, 0}, new int[]{4, 5, 6});
        // System.out.println("response: " + Arrays.toString(response));
        // response = solution("CAGCCTA", new int[]{2, 5, 0}, new int[]{4, 5});
        //  System.out.println("response: " + Arrays.toString(response));


    }
}
